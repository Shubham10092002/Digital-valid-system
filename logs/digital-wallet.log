2025-10-30 00:05:08 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=33m22s997ms).
2025-10-30 00:31:06 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=23m28s60ms).
2025-10-30 01:01:12 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m6s261ms).
2025-10-30 01:31:05 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=29m22s728ms).
2025-10-30 02:31:41 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59m5s373ms).
2025-10-30 03:01:02 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m21s869ms).
2025-10-30 03:31:04 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m1s745ms).
2025-10-30 03:49:31 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m27s262ms).
2025-10-30 04:31:34 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=42m2s720ms).
2025-10-30 05:16:24 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=44m49s550ms).
2025-10-30 06:08:06 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m42s723ms).
2025-10-30 06:56:55 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48m48s879ms).
2025-10-30 07:01:21 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m25s627ms).
2025-10-30 07:31:13 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m51s986ms).
2025-10-30 08:01:07 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m23s584ms).
2025-10-30 08:30:56 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=29m49s77ms).
2025-10-30 08:41:45 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m19s490ms).
2025-10-30 09:42:44 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h59s113ms).
2025-10-30 09:45:20 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m35s666ms).
2025-10-30 11:00:15 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=54s639ms).
2025-10-30 11:20:05 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m49s755ms).
2025-10-30 11:28:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m33s935ms).
2025-10-30 11:46:45 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-30 11:46:45 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-30 11:46:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:46:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-30 11:46:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-30 11:46:56 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - Starting DigitalWalletDemoApplicationTests using Java 21.0.8 with PID 84971 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:46:56 [Test worker] DEBUG c.e.d.DigitalWalletDemoApplicationTests - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:46:56 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - The following 1 profile is active: "test"
2025-10-30 11:46:57 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 11:46:57 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 3 JPA repository interfaces.
2025-10-30 11:46:57 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 11:46:57 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-10-30 11:46:57 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 11:46:57 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 11:46:57 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-30 11:46:58 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=ROOT
2025-10-30 11:46:58 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-30 11:46:58 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-30 11:46:58 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 11:46:58 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists transactions cascade 
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists wallets cascade 
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        amount numeric(38,2) not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        wallet_id bigint not null,
        description varchar(255),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        primary key (id)
    )
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        balance numeric(38,2) not null,
        id bigint generated by default as identity,
        user_id bigint,
        version bigint,
        wallet_name varchar(255),
        primary key (id)
    )
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 11:46:58 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 11:46:58 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:46:58 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-30 11:46:59 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 11:46:59 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-30 11:46:59 [Test worker] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - Started DigitalWalletDemoApplicationTests in 3.206 seconds (process running for 4.039)
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 11:47:00 [Test worker] WARN  c.e.d.controller.UserController - Username 'alice' already exists
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 11:47:00 [Test worker] DEBUG c.e.d.controller.UserController - User 'alice' saved with wallet ID 1
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - User 'alice' successfully created
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: null
2025-10-30 11:47:00 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'null': []
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 11:47:00 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'alice': []
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 11:47:00 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'alice': []
2025-10-30 11:47:00 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest]: UserControllerTypeMismatchTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:00 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - Starting UserControllerTypeMismatchTest using Java 21.0.8 with PID 84971 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:47:00 [Test worker] DEBUG c.e.d.c.UserControllerTypeMismatchTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:47:00 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 11:47:01 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - Started UserControllerTypeMismatchTest in 0.287 seconds (process running for 5.188)
2025-10-30 11:47:01 [Test worker] WARN  c.e.d.e.GlobalExceptionHandler - Invalid ID format: null
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:301)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest.testGetUserById_WhenIdIsNull_ShouldReturnBadRequest(UserControllerTypeMismatchTest.java:45)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.NumberFormatException: For input string: "null"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:866)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:293)
	... 113 common frames omitted
2025-10-30 11:47:01 [Test worker] WARN  c.e.d.e.GlobalExceptionHandler - Invalid ID format: s
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "s"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:301)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest.testGetUserById_WhenIdIsString_ShouldReturnBadRequest(UserControllerTypeMismatchTest.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.NumberFormatException: For input string: "s"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:866)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:293)
	... 113 common frames omitted
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.controller.WalletControllerTest]: WalletControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:01 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.controller.WalletControllerTest
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.c.WalletControllerTest - Starting WalletControllerTest using Java 21.0.8 with PID 84971 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:47:01 [Test worker] DEBUG c.e.d.c.WalletControllerTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.c.WalletControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 11:47:01 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.c.WalletControllerTest - Started WalletControllerTest in 0.24 seconds (process running for 5.524)
2025-10-30 11:47:01 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryEdgeCasesTest]: TransactionRepositoryEdgeCasesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:01 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryEdgeCasesTest
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - Starting TransactionRepositoryEdgeCasesTest using Java 21.0.8 with PID 84971 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:47:01 [Test worker] DEBUG c.e.d.r.TransactionRepositoryEdgeCasesTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 11:47:01 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 11:47:01 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-10-30 11:47:01 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-10-30 11:47:01 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:c956b5e2-a59a-4d03-afec-0e96fbf5fa8d;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-10-30 11:47:01 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 11:47:01 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 11:47:01 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 11:47:01 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@24ae5dd']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 11:47:01 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        id bigint generated by default as identity,
        amount numeric(38,2) not null,
        description varchar(255),
        timestamp timestamp(6),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        wallet_id bigint not null,
        primary key (id)
    )
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        id bigint generated by default as identity,
        balance numeric(38,2) not null,
        version bigint,
        wallet_name varchar(255),
        user_id bigint,
        primary key (id)
    )
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 11:47:01 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:01 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - Started TransactionRepositoryEdgeCasesTest in 0.275 seconds (process running for 5.938)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:01 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryIntegrationTest]: TransactionRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryIntegrationTest
2025-10-30 11:47:02 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - Starting TransactionRepositoryIntegrationTest using Java 21.0.8 with PID 84971 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:47:02 [Test worker] DEBUG c.e.d.r.TransactionRepositoryIntegrationTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:47:02 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 11:47:02 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 11:47:02 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 3 JPA repository interfaces.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-10-30 11:47:02 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:6e001e74-85b2-474e-ac94-a31b1b20afd0;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-10-30 11:47:02 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 11:47:02 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 11:47:02 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 11:47:02 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@55e990dc']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 11:47:02 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        id bigint generated by default as identity,
        amount numeric(38,2) not null,
        description varchar(255),
        timestamp timestamp(6),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        wallet_id bigint not null,
        primary key (id)
    )
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        id bigint generated by default as identity,
        balance numeric(38,2) not null,
        version bigint,
        wallet_name varchar(255),
        user_id bigint,
        primary key (id)
    )
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 11:47:02 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:02 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:6e001e74-85b2-474e-ac94-a31b1b20afd0'
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 11:47:02 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - Started TransactionRepositoryIntegrationTest in 0.669 seconds (process running for 6.747)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryTest]: TransactionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryTest
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.UserRepositoryIntegrationTest]: UserRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.UserRepositoryIntegrationTest
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        wallets 
    where
        id=? 
        and version=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        wallets 
    where
        id=? 
        and version=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 23505, SQLState: 23505
2025-10-30 11:47:02 [Test worker] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unique index or primary key violation: "PUBLIC.UKR43AF9AP4EDM43MMTQ01ODDJ6_INDEX_4 ON PUBLIC.USERS(USERNAME NULLS FIRST) VALUES ( /* 8 */ 'bob' )"; SQL statement:
insert into users (password,username,id) values (?,?,default) [23505-232]
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.UserRepositoryTest
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.WalletRepositoryIntegrationTest]: WalletRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.WalletRepositoryIntegrationTest
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.WalletRepositoryTest]: WalletRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 11:47:02 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.WalletRepositoryTest
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        sum(w1_0.balance) 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.wallet_name,
        w1_0.balance 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        sum(w1_0.balance) 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.wallet_name,
        w1_0.balance 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 11:47:02 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 11:47:02 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 11:47:03 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 11:47:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists transactions cascade 
2025-10-30 11:47:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-10-30 11:47:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists wallets cascade 
2025-10-30 11:47:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-30 11:47:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-30 11:47:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:06 [main] INFO  c.e.d.DigitalWalletDemoApplication - Starting DigitalWalletDemoApplication v0.0.1-SNAPSHOT using Java 21.0.8 with PID 84986 (/Users/shubhamkumar/Desktop/Source/digitalWalletDemo/build/libs/digitalWalletDemo-0.0.1-SNAPSHOT.jar started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 11:47:06 [main] DEBUG c.e.d.DigitalWalletDemoApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 11:47:06 [main] INFO  c.e.d.DigitalWalletDemoApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-30 11:47:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 11:47:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 3 JPA repository interfaces.
2025-10-30 11:47:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8086 (http)
2025-10-30 11:47:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-30 11:47:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-10-30 11:47:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-30 11:47:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 990 ms
2025-10-30 11:47:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 11:47:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-10-30 11:47:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 11:47:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 11:47:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-30 11:47:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17189618
2025-10-30 11:47:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-30 11:47:07 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 11:47:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 11:47:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 11:47:08 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-30 11:47:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 11:47:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 11:47:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8086 (http) with context path '/'
2025-10-30 11:47:09 [main] INFO  c.e.d.DigitalWalletDemoApplication - Started DigitalWalletDemoApplication in 3.931 seconds (process running for 4.367)
2025-10-30 11:47:46 [http-nio-8086-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-30 11:47:46 [http-nio-8086-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-30 11:47:46 [http-nio-8086-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-10-30 11:47:47 [http-nio-8086-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 179 ms
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:49:37 [http-nio-8086-exec-6] DEBUG org.hibernate.SQL - 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.balance,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 11:50:04 [http-nio-8086-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 11:54:18 [http-nio-8086-exec-9] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource v3/api-docs.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-30 11:54:18 [http-nio-8086-exec-10] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource favicon.ico.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-30 11:55:13 [http-nio-8086-exec-3] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource favicon.ico.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-30 12:38:12 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-30 12:38:12 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-30 12:38:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-30 12:38:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-30 12:38:30 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - Starting DigitalWalletDemoApplicationTests using Java 21.0.8 with PID 87308 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:30 [Test worker] DEBUG c.e.d.DigitalWalletDemoApplicationTests - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:30 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - The following 1 profile is active: "test"
2025-10-30 12:38:30 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 12:38:30 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 3 JPA repository interfaces.
2025-10-30 12:38:30 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 12:38:31 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-10-30 12:38:31 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 12:38:31 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 12:38:31 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-30 12:38:31 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=ROOT
2025-10-30 12:38:31 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-30 12:38:31 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-30 12:38:31 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 12:38:31 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists transactions cascade 
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    drop table if exists wallets cascade 
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        amount numeric(38,2) not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        wallet_id bigint not null,
        description varchar(255),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        primary key (id)
    )
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        balance numeric(38,2) not null,
        id bigint generated by default as identity,
        user_id bigint,
        version bigint,
        wallet_name varchar(255),
        primary key (id)
    )
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 12:38:31 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 12:38:31 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:31 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-30 12:38:32 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 12:38:33 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-30 12:38:33 [Test worker] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.DigitalWalletDemoApplicationTests - Started DigitalWalletDemoApplicationTests in 3.139 seconds (process running for 3.868)
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 12:38:33 [Test worker] WARN  c.e.d.controller.UserController - Username 'alice' already exists
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 12:38:33 [Test worker] DEBUG c.e.d.controller.UserController - User 'alice' saved with wallet ID 1
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.controller.UserController - User 'alice' successfully created
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: null
2025-10-30 12:38:33 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'null': []
2025-10-30 12:38:33 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 12:38:33 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'alice': []
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.controller.UserController - Received request to create user: alice
2025-10-30 12:38:34 [Test worker] WARN  c.e.d.controller.UserController - Validation failed for user 'alice': []
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest]: UserControllerTypeMismatchTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - Starting UserControllerTypeMismatchTest using Java 21.0.8 with PID 87308 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:34 [Test worker] DEBUG c.e.d.c.UserControllerTypeMismatchTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.UserControllerTypeMismatchTest - Started UserControllerTypeMismatchTest in 0.299 seconds (process running for 5.037)
2025-10-30 12:38:34 [Test worker] WARN  c.e.d.e.GlobalExceptionHandler - Invalid ID format: null
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:301)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest.testGetUserById_WhenIdIsNull_ShouldReturnBadRequest(UserControllerTypeMismatchTest.java:45)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.NumberFormatException: For input string: "null"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:866)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:293)
	... 113 common frames omitted
2025-10-30 12:38:34 [Test worker] WARN  c.e.d.e.GlobalExceptionHandler - Invalid ID format: s
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "s"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:301)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.example.digitalWalletDemo.controller.UserControllerTypeMismatchTest.testGetUserById_WhenIdIsString_ShouldReturnBadRequest(UserControllerTypeMismatchTest.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.NumberFormatException: For input string: "s"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:866)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:293)
	... 113 common frames omitted
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.controller.WalletControllerTest]: WalletControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.controller.WalletControllerTest
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.WalletControllerTest - Starting WalletControllerTest using Java 21.0.8 with PID 87308 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:34 [Test worker] DEBUG c.e.d.c.WalletControllerTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.WalletControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.c.WalletControllerTest - Started WalletControllerTest in 0.218 seconds (process running for 5.352)
2025-10-30 12:38:34 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryEdgeCasesTest]: TransactionRepositoryEdgeCasesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryEdgeCasesTest
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - Starting TransactionRepositoryEdgeCasesTest using Java 21.0.8 with PID 87308 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:34 [Test worker] DEBUG c.e.d.r.TransactionRepositoryEdgeCasesTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:34 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 12:38:34 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 12:38:34 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 3 JPA repository interfaces.
2025-10-30 12:38:34 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-10-30 12:38:34 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:37560d35-1eb4-4ee9-969b-dc744c656304;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-10-30 12:38:34 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 12:38:34 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 12:38:34 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 12:38:34 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@44423240']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 12:38:35 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        id bigint generated by default as identity,
        amount numeric(38,2) not null,
        description varchar(255),
        timestamp timestamp(6),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        wallet_id bigint not null,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        id bigint generated by default as identity,
        balance numeric(38,2) not null,
        version bigint,
        wallet_name varchar(255),
        user_id bigint,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 12:38:35 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:35 [Test worker] INFO  c.e.d.r.TransactionRepositoryEdgeCasesTest - Started TransactionRepositoryEdgeCasesTest in 0.267 seconds (process running for 5.763)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:35 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryIntegrationTest]: TransactionRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:35 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryIntegrationTest
2025-10-30 12:38:35 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - Starting TransactionRepositoryIntegrationTest using Java 21.0.8 with PID 87308 (started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:35 [Test worker] DEBUG c.e.d.r.TransactionRepositoryIntegrationTest - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:35 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-10-30 12:38:35 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 12:38:35 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 3 JPA repository interfaces.
2025-10-30 12:38:35 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-10-30 12:38:35 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:7973d108-af77-4eff-bdb0-31132c221c5a;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-10-30 12:38:35 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 12:38:35 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 12:38:35 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 12:38:35 [Test worker] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@1f7d202']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 12:38:35 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table transactions (
        id bigint generated by default as identity,
        amount numeric(38,2) not null,
        description varchar(255),
        timestamp timestamp(6),
        type enum ('CREDIT','DEBIT','TRANSFER') not null,
        wallet_id bigint not null,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    create table wallets (
        id bigint generated by default as identity,
        balance numeric(38,2) not null,
        version bigint,
        wallet_name varchar(255),
        user_id bigint,
        primary key (id)
    )
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
2025-10-30 12:38:35 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:35 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 12:38:35 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:7973d108-af77-4eff-bdb0-31132c221c5a'
2025-10-30 12:38:35 [Test worker] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 12:38:35 [Test worker] INFO  c.e.d.r.TransactionRepositoryIntegrationTest - Started TransactionRepositoryIntegrationTest in 0.714 seconds (process running for 6.616)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.TransactionRepositoryTest]: TransactionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:35 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.TransactionRepositoryTest
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:35 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.type,
        sum(t1_0.amount) 
    from
        transactions t1_0 
    where
        t1_0.wallet_id=? 
    group by
        t1_0.type
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
        and t1_0.timestamp between ? and ? 
        and (
            ? is null 
            or t1_0.type=?
        ) 
    order by
        t1_0.timestamp desc
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (amount, description, timestamp, type, wallet_id, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.description,
        t1_0.timestamp,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    left join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.id=?
2025-10-30 12:38:36 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.UserRepositoryIntegrationTest]: UserRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:36 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.UserRepositoryIntegrationTest
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        wallets 
    where
        id=? 
        and version=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    delete 
    from
        wallets 
    where
        id=? 
        and version=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 23505, SQLState: 23505
2025-10-30 12:38:36 [Test worker] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unique index or primary key violation: "PUBLIC.UKR43AF9AP4EDM43MMTQ01ODDJ6_INDEX_4 ON PUBLIC.USERS(USERNAME NULLS FIRST) VALUES ( /* 8 */ 'bob' )"; SQL statement:
insert into users (password,username,id) values (?,?,default) [23505-232]
2025-10-30 12:38:36 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:36 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.UserRepositoryTest
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 12:38:36 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.WalletRepositoryIntegrationTest]: WalletRepositoryIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:36 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.WalletRepositoryIntegrationTest
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.digitalWalletDemo.repository.WalletRepositoryTest]: WalletRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-30 12:38:36 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.digitalWalletDemo.DigitalWalletDemoApplication for test class com.example.digitalWalletDemo.repository.WalletRepositoryTest
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        sum(w1_0.balance) 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0 
    left join
        users u1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.wallet_name,
        w1_0.balance 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        sum(w1_0.balance) 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.wallet_name,
        w1_0.balance 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        w1_0.id,
        w1_0.balance,
        w1_0.user_id,
        w1_0.version,
        w1_0.wallet_name 
    from
        wallets w1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (password, username, id) 
    values
        (?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    insert 
    into
        wallets
        (balance, user_id, version, wallet_name, id) 
    values
        (?, ?, ?, ?, default)
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 12:38:36 [Test worker] DEBUG org.hibernate.SQL - 
    select
        distinct u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        w1_0.balance>?
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Started =====
2025-10-30 12:38:36 [Test worker] INFO  c.e.d.service.WalletServiceTest - ===== WalletServiceTest Setup Completed =====
2025-10-30 12:38:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:36 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists transactions cascade 
2025-10-30 12:38:36 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-10-30 12:38:36 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists wallets cascade 
2025-10-30 12:38:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-30 12:38:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-30 12:38:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:42 [main] INFO  c.e.d.DigitalWalletDemoApplication - Starting DigitalWalletDemoApplication v0.0.1-SNAPSHOT using Java 21.0.8 with PID 87343 (/Users/shubhamkumar/Desktop/Source/digitalWalletDemo/build/libs/digitalWalletDemo-0.0.1-SNAPSHOT.jar started by shubhamkumar in /Users/shubhamkumar/Desktop/Source/digitalWalletDemo)
2025-10-30 12:38:42 [main] DEBUG c.e.d.DigitalWalletDemoApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-10-30 12:38:42 [main] INFO  c.e.d.DigitalWalletDemoApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-30 12:38:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-30 12:38:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-10-30 12:38:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8086 (http)
2025-10-30 12:38:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-30 12:38:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-10-30 12:38:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-30 12:38:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1002 ms
2025-10-30 12:38:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-30 12:38:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-10-30 12:38:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-30 12:38:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-30 12:38:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-30 12:38:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d15789f
2025-10-30 12:38:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-30 12:38:44 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-30 12:38:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-30 12:38:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 12:38:45 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-30 12:38:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-30 12:38:46 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 15 endpoints beneath base path '/actuator'
2025-10-30 12:38:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8086 (http) with context path '/'
2025-10-30 12:38:46 [main] INFO  c.e.d.DigitalWalletDemoApplication - Started DigitalWalletDemoApplication in 4.172 seconds (process running for 4.536)
2025-10-30 12:48:21 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m7s272ms).
2025-10-30 13:11:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m17s553ms).
2025-10-30 13:27:09 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s962ms).
2025-10-30 13:48:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s430ms).
2025-10-30 14:01:23 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m14s552ms).
2025-10-30 14:16:52 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s136ms).
2025-10-30 15:14:04 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-30 15:14:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-30 15:14:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-30 15:14:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-30 15:14:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
